/*
Code automatically generated by asn1scc tool
*/


def TM_5_1_InformativeEventReport_IsConstraintValid(pVal: Ref[TM_5_1_InformativeEventReport]): Int = 
{
    var ret = 0 // isvalid_scala.stg:80

    ret = EventDefinition_ID_IsConstraintValid(Ref(pVal.x.eventDefinition_ID))
    if (ret == 0) {
        ret = DummyType_IsConstraintValid(Ref(pVal.x.auxiliaryData))
    }

    ret
}

def TM_5_1_InformativeEventReport_Initialize(pVal: Ref[TM_5_1_InformativeEventReport]): Unit = // init_scala:12
{

	/*set eventDefinition_ID */
	EventDefinition_ID_Initialize(Ref(pVal.x.eventDefinition_ID));
	/*set auxiliaryData */
	DummyType_Initialize(Ref(pVal.x.auxiliaryData));
}

def TM_5_1_InformativeEventReport_Encode(pVal: Ref[TM_5_1_InformativeEventReport], pBitStrm: Ref[BitStream], bCheckConstraints: Boolean): Int = //uper_scala:23
{
    var ret = 0

    if (bCheckConstraints) 
        ret = TM_5_1_InformativeEventReport_IsConstraintValid(pVal)
    if (ret == 0) {
        /*Encode eventDefinition_ID */
        ret = EventDefinition_ID_Encode(Ref(pVal.x.eventDefinition_ID), pBitStrm, pErrCode, FALSE);
        if (ret == 0) {
            /*Encode auxiliaryData */
            ret = DummyType_Encode(Ref(pVal.x.auxiliaryData), pBitStrm, pErrCode, FALSE);
        }
    }
    
    ret
}

def TM_5_1_InformativeEventReport_Decode(pVal: TM_5_1_InformativeEventReport, pBitStrm: Ref[BitStream]): Int = 
{
    var ret = 0;


    /* Decode eventDefinition_ID */
    ret = EventDefinition_ID_Decode(Ref(pVal.x.eventDefinition_ID), pBitStrm, pErrCode);
    if (ret == 0) {
        /* Decode auxiliaryData */
        ret = DummyType_Decode(Ref(pVal.x.auxiliaryData), pBitStrm, pErrCode);
    }

    if (ret == 0)
        ret = TM_5_1_InformativeEventReport_IsConstraintValid(pVal) 
    ret
} // body_scala:10, move to definition if needed somewhere else