pragma Style_Checks (Off);
--  Code automatically generated by asn1scc tool

pragma Warnings (Off, """String"" is already use-visible inside package ""Standard""");

pragma Warnings (Off, "redundant with clause in body");
pragma Warnings (On, "redundant with clause in body");

package body MY_MODULE with SPARK_Mode is


pragma Warnings (Off, "condition can only be False if invalid values present");
pragma Warnings (Off, "condition can only be True if invalid values present");


function Message_szDescription_IsConstraintValid(val : Message_szDescription) return adaasn1rtl.ASN1_RESULT
is
    pragma Unreferenced (val);
    pragma Warnings (Off, "initialization of ""ret"" has no effect");        
    ret : adaasn1rtl.ASN1_RESULT := adaasn1rtl.ASN1_RESULT'(Success => true, ErrorCode => 0);
    pragma Warnings (On, "initialization of ""ret"" has no effect");        
begin
    ret := adaasn1rtl.ASN1_RESULT'(Success => true, ErrorCode => 0);
    return ret;
end Message_szDescription_IsConstraintValid;

function Message_IsConstraintValid(val : Message) return adaasn1rtl.ASN1_RESULT
is
    pragma Warnings (Off, "initialization of ""ret"" has no effect");        
    ret : adaasn1rtl.ASN1_RESULT := adaasn1rtl.ASN1_RESULT'(Success => true, ErrorCode => 0);
    pragma Warnings (On, "initialization of ""ret"" has no effect");        
begin
    ret := Message_szDescription_IsConstraintValid(val.szDescription);
    return ret;
end Message_IsConstraintValid;





pragma Warnings (On, "condition can only be False if invalid values present");
pragma Warnings (On, "condition can only be True if invalid values present");

end MY_MODULE;